// <auto-generated />
using System;
using InternshipProject1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InternshipProject1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250807094248_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InternshipProject1.Models.Harvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LandId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("UnitQuantity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("InternshipProject1.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HarvestId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StoredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UnitQuantity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HarvestId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("InternshipProject1.Models.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AreaInHectares")
                        .HasColumnType("double precision");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PlantingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalTrees")
                        .HasColumnType("integer");

                    b.Property<int>("TreeSpeciesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TreeSpeciesId");

                    b.ToTable("Lands");
                });

            modelBuilder.Entity("InternshipProject1.Models.LandPractices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FertilizerFreq")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FertilizerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LandId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PesticideUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("WateringMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.ToTable("LandPractices");
                });

            modelBuilder.Entity("InternshipProject1.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("InternshipProject1.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InventoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("UnitQuantity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("InternshipProject1.Models.TreeSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HarvestMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TreeSpecies");
                });

            modelBuilder.Entity("InternshipProject1.Models.Harvest", b =>
                {
                    b.HasOne("InternshipProject1.Models.Land", "Lands")
                        .WithMany("Harvests")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lands");
                });

            modelBuilder.Entity("InternshipProject1.Models.Inventory", b =>
                {
                    b.HasOne("InternshipProject1.Models.Harvest", "Harvest")
                        .WithMany()
                        .HasForeignKey("HarvestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Harvest");
                });

            modelBuilder.Entity("InternshipProject1.Models.Land", b =>
                {
                    b.HasOne("InternshipProject1.Models.Owner", "Owner")
                        .WithMany("Lands")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshipProject1.Models.TreeSpecies", "TreeSpecies")
                        .WithMany("Lands")
                        .HasForeignKey("TreeSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("TreeSpecies");
                });

            modelBuilder.Entity("InternshipProject1.Models.LandPractices", b =>
                {
                    b.HasOne("InternshipProject1.Models.Land", "Lands")
                        .WithMany("LandPractices")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lands");
                });

            modelBuilder.Entity("InternshipProject1.Models.Sale", b =>
                {
                    b.HasOne("InternshipProject1.Models.Inventory", "Inventory")
                        .WithMany("Sales")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InternshipProject1.Models.Inventory", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("InternshipProject1.Models.Land", b =>
                {
                    b.Navigation("Harvests");

                    b.Navigation("LandPractices");
                });

            modelBuilder.Entity("InternshipProject1.Models.Owner", b =>
                {
                    b.Navigation("Lands");
                });

            modelBuilder.Entity("InternshipProject1.Models.TreeSpecies", b =>
                {
                    b.Navigation("Lands");
                });
#pragma warning restore 612, 618
        }
    }
}
